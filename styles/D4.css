* {
    margin: 0;
    padding: 0;
    vertical-align: baseline;
}


html {
    font-family: system-ui, sans-serif;
}
main {
    background: linear-gradient(-35deg, #000000, #52326b, #833ab4, #1e463c);
	background-size: 400% 400%;
	height: 100vh;
	animation: gradient 10s ease infinite;
}

@media(max-width:460px){
    main {
        height: 85vh!important;
        animation: gradient-small 15s ease infinite;
    }
/* Create a new keyframes for the media query */
    @keyframes gradient-small {
        0% {
            background-position: 0% 80%;
        }
        50% {
            background-position: 70% 10%;
        }
        100% {
            background-position: 0% 80%;
        }
    }

    .topper{
        display: flex;
        justify-content: center;
        height: 50px;
        padding: 50px;
    }

    .btn-change{
        align-self: center;
        background-color: #0b85ff;
        border-radius: 5px;
        color: #ffffff;
        font-size: 0.8rem !important;
        justify-self: center;
        padding: 10px!important;
        gap: 10px;
    }
    
    button {
        align-self: center;
        background-color: #212529;
        border-radius: 5px;
        color: #ffffff;
        font-size: 0.8rem !important;
        padding: 10px!important;
        font-weight: 300;
    }
    button:hover {
        cursor: pointer;
        background-color: #857777;
    }

    .display-area{
        display: flex;
        justify-content: center;
        padding: 10%!important;
    }

    
    .resultDisplay{
        display: flex;
        text-align: center;
        margin-top: 0px!important;
        animation: sineMovement 5s alternate ease-in-out;}

    
    .dice-area {
        padding:5%!important;
        display: flex;
        flex-wrap: wrap; /* Allow dice to wrap to the next line if necessary */
        gap: 8%!important;
        display: flex; /* Use flexbox to handle positioning of multiple dice */

    }

    

}

h4{
    margin-top: 3%;
    text-align: center;
}



/*animation*/
@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

body {
    overflow: hidden;
}

.topper{
    display: flex;
    justify-content: center;
    height: 50px;
    padding: 30px;
}

button {
    align-self: center;
    background-color: #212529;
    border-radius: 5px;
    color: #ffffff;
    font-size: 1.25rem;
    justify-self: center;
    padding: 10px;
    font-weight: 400;
}
button:hover {
    cursor: pointer;
    background-color: #857777;
}
.btn-change {
	font-family: system-ui;
	border-radius: 1em !important;
	border: none;
	outline: none;
	background: #dddddd;
	cursor: pointer;
    align-self: center;
    background-color: #1f71c2;
    color: #ffffff;
    font-size: 1.25rem;
    justify-self: center;
    padding: 10px;
}


.pyramid_box {
    position: relative;
    width: 150px;
    height: 150px;
    transform-style: preserve-3d;
    animation: sineMovement 3s alternate ease-in-out infinite;
}

.pyramid_box div {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
}


.pyramid_box div span {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(#34424b, rgb(17, 27, 71));
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
    transform: rotateY(calc(90deg * var(--i))) translateZ(74px) rotateX(30deg); /* Corrected transform property */
    transform-origin: bottom;
    transform-style: preserve-3d;
}

.pyramid_box div span:nth-child(1) {
    --i: 0;
}

.pyramid_box div span:nth-child(2) {
    --i: 1;
}

.pyramid_box div span:nth-child(3) {
    --i: 2;
}

.pyramid_box div span:nth-child(4) {
    --i: 3;
}



.pyramid_box div span:nth-child(1){
    --i:0
}
.pyramid_box div span:nth-child(2){
    --i:1
}
.pyramid_box div span:nth-child(3){
    --i:2
}
.pyramid_box div span:nth-child(4){
    --i:3
}



.rolling {
    animation: rolling-animation 3s ease-in-out;
}


.dice-area {
    padding: 150px;
    margin-top: 20px;
    display: flex;
    flex-wrap: wrap; /* Allow dice to wrap to the next line if necessary */
    justify-content: center;
    align-items: center;
    gap: 130px;
    display: flex; /* Use flexbox to handle positioning of multiple dice */
    gap: 100px; /* Add some space between dice */
    
}
.dice-area:hover {
    cursor: pointer;
}

@keyframes roll-animation-1 {
    0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    25%{
        transform: rotateX(90deg) rotateY(90deg)rotateZ(90deg);
    }
    50%{
        transform: rotateX(270deg) rotateY(180deg)rotateZ(270deg);
    }
    100% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
}

@keyframes roll-animation-2 {
    0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    25%{
        transform: rotateX(-60deg) rotateY(-60deg)rotateZ(-60deg);
    }
    50%{
        transform: rotateX(-140deg) rotateY(-180deg)rotateZ(-270deg);
    }
    100% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
}



/* Add a common class to trigger the animation */
.rolling-1 {
    animation: roll-animation-1 3s ease-in-out;
}

.rolling-2 {
    animation: roll-animation-2 3s ease-in-out;
}



.display-area{
    display: flex;
    justify-content: center;
}

.resultDisplay{
    margin-top: 10px;
    text-align: center;
    padding: 10px;
    width: 300px;
    height: 25px;
    background-color: rgb(161, 204, 204);
    background-size: 300px;
    animation: sineMovement 5s alternate ease-in-out;
}

@keyframes sineMovement {
    0% {
    transform: translate(0, -30%);
    }
    50% {
        transform: translate(0, -20%);
        }
    100% {
    transform: translate(0, -10%);
    }
}